``slice``
===========

Фільтр ``slice`` вилучає фрагмент послідовності, відображення або рядка:

.. code-block:: twig

    {% for i in [1, 2, 3, 4, 5]|slice(1, 2) %}
        {# ітеруватиме по 2 та 3 #}
    {% endfor %}

    {{ '12345'|slice(1, 2) }}

    {# виводить 23 #}

Ви можете використовувати будь-який валідний вираз як для початку, так і для довжини:

.. code-block:: twig

    {% for i in [1, 2, 3, 4, 5]|slice(start, length) %}
        {# ... #}
    {% endfor %}

Як синтаксичний цукор ви також можете використовувати нотацію ``[]``:

.. code-block:: twig

    {% for i in [1, 2, 3, 4, 5][start:length] %}
        {# ... #}
    {% endfor %}

    {{ '12345'[1:2] }} {# відобразить "23" #}

    {# ви можете пропустити перший аргумент - що те ж саме, що і 0 #}
    {{ '12345'[:2] }} {# відобразить "12" #}

    {# ви можете пропустити останній аргумент - що обере все до кінця #}
    {{ '12345'[2:] }} {# відобразить "345" #}

    {# ви можете використати відʼємне значення - наприклад, щоб видалити знаки наприкінці #}
    {{ '12345'[:-2] }} {# відобразить "123" #}

Фільтр ``slice`` працює як PHP-функція `array_slice`_ для масивів і
`mb_substr`_ для рядків з поверненням до резервного `ubstr`_.

Якщо початок невід'ємний, то послідовність починається з цього початку у змінній. 
Якщо початок від'ємний, послідовність почнеться далеко від кінця змінної.

Якщо довжина задана і додатна, то послідовність буде мати до цієї кількості
елементів у послідовності. Якщо змінна менша за довжину, то будуть присутні лише доступні
елементи змінної. Якщо задано від'ємне значення довжини, то послідовність буде зупинена 
за стільки-то елементів до кінця змінної. Якщо довжину не вказано, то у послідовності буде
все, починаючи зі зсуву до кінця змінної.

Аргумент ``preserve_keys`` використовується для обнулення індексу під час циклу.

.. code-block:: twig

    {% for key, value in [1, 2, 3, 4, 5]|slice(1, 2, true) %}
        {{ key }} - {{ value }}
    {% endfor %}

    {# output
        1 - 2
        2 - 3
    #}

    {% for key, value in [1, 2, 3, 4, 5]|slice(1, 2) %}
        {{ key }} - {{ value }}
    {% endfor %}

    {# виведення
        0 - 2
        1 - 3
    #}

.. note::

    Він також працює з об'єктами, що реалізують інтерфейс `Traversable`_.

Аргументи
---------

* ``start``:         Початок фрагменту
* ``length``:        Розмір фрагменту
* ``preserve_keys``: Зберігати ключ чи ні (якщо введення є масивом), за замовчуванням значенням є ``false``.

.. _`Traversable`: https://www.php.net/manual/en/class.traversable.php
.. _`array_slice`: https://www.php.net/array_slice
.. _`mb_substr`:   https://www.php.net/mb-substr
.. _`substr`:      https://www.php.net/substr
