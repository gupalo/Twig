``slice``
===========

Фильтр ``slice`` удаляет фрагмент последовательности, отображения или строки:

.. code-block:: twig

    {% for i in [1, 2, 3, 4, 5]|slice(1, 2) %}
        {# будет итерировать по 2 и 3 #}
    {% endfor %}

    {{ '12345'|slice(1, 2) }}

    {# выводит 23 #}

Вы можете использовать любое валидное выражение как для начала, так и для длины:

.. code-block:: twig

    {% for i in [1, 2, 3, 4, 5]|slice(start, length) %}
        {# ... #}
    {% endfor %}

В качестве синтаксического сахара вы также можете использовать нотацию ``[]``:

.. code-block:: twig

    {% for i in [1, 2, 3, 4, 5][start:length] %}
        {# ... #}
    {% endfor %}

    {{ '12345'[1:2] }} {# відобразить "23" #}

    {# вы можете пропустить первый аргумент - что то же самое, что и 0 #}
    {{ '12345'[:2] }} {# відобразить "12" #}

    {# вы можете пропустить последний аргумент - что выберет все до конца #}
    {{ '12345'[2:] }} {# відобразить "345" #}

    {# вы можете использовать отрицательное значение - например, чтобы удалить знаки в конце #}
    {{ '12345'[:-2] }} {# відобразить "123" #}

Фильтр ``slice`` работает как PHP-функция `array_slice`_ для массивов и
`mb_substr`_ для строк с возвратом к резервному `ubstr`_.

Если начало неотрицательное, то последовательность начинается с этого начала в переменной. 
Если начало отрицательное, последовательность начнется далеко от конца переменной.

Если длина задана и положительна, то последовательность будет иметь до этого количества
элементов в последовательности. Если переменная меньше длины, то будут присутствовать только доступные
элементы переменной. Если задано отрицательное значение длины, то последовательность будет остановлена 
за столько-то элементов до конца переменной. Если длина не указана, то в последовательности будет
все, начиная со сдвига до конца переменной.

Аргумент ``preserve_keys`` используется для обнуления индекса во время цикла.

.. code-block:: twig

    {% for key, value in [1, 2, 3, 4, 5]|slice(1, 2, true) %}
        {{ key }} - {{ value }}
    {% endfor %}

    {# output
        1 - 2
        2 - 3
    #}

    {% for key, value in [1, 2, 3, 4, 5]|slice(1, 2) %}
        {{ key }} - {{ value }}
    {% endfor %}

    {# виведення
        0 - 2
        1 - 3
    #}

.. note::

    Он также работает с объектами, реализующими интерфейс `Traversable`_.

Аргументы
---------

* ``start``:         Начало фрагмента
* ``length``:        Размер фрагмента
* ``preserve_keys``: Сохранять ли ключ (если ввод является массивом), по умолчанию значением является ``false``.

.. _`Traversable`: https://www.php.net/manual/en/class.traversable.php
.. _`array_slice`: https://www.php.net/array_slice
.. _`mb_substr`:   https://www.php.net/mb-substr
.. _`substr`:      https://www.php.net/substr
