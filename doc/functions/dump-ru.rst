``dump``
========

Функция ``dump`` сбрасывает информацию о переменной шаблона. Это
в основном полезно для отладки шаблона, который ведет себя не так, как ожидалось
при анализе его переменных:

.. code-block:: twig

    {{ dump(user) }}

.. note::

    По умолчанию функция ``dump`` недоступна. Вы должны добавить расширение
    ``\Twig\Extension\DebugExtension`` явно при создании вашего окружения 
    Twig ::

        $twig = new \Twig\Environment($loader, [
            'debug' => true,
            // ...
        ]);
        $twig->addExtension(new \Twig\Extension\DebugExtension());

    Даже когда включена, функция ``dump`` не будет ничего выводить, если не включена опция
    ``debug`` в окружении (чтобы избежать утечки информации об отладке на производственном сервере).

В контексте HTML, оберните вывод тегом ``pre``, чтобы облегчить его чтение:

.. code-block:: html+twig

    <pre>
        {{ dump(user) }}
    </pre>

.. tip::

    Использование тега ``pre`` не требуется, если включены `XDebug`_ и ``html_errors``;
    в качестве бонуса, вывод также будет лучше, если включен XDebug.

Вы можете отладить несколько переменных, передав их в качестве дополнительных аргументов:

.. code-block:: twig

    {{ dump(user, categories) }}

Если вы не передаете никакого значения, все переменные из текущего контекста сбрасываются:

.. code-block:: twig

    {{ dump() }}

.. note::

    Внутренне Twig использует PHP-функцию `var_dump`_.

Аргументі
---------

* ``context``: Контекст для сбрасывания

.. _`XDebug`:   https://xdebug.org/docs/display
.. _`var_dump`: https://www.php.net/var_dump
