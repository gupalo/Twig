``dump``
========

Функція ``dump`` скидає інформацію про змінну шаблону. Це
здебільшого корисно для налагодження шаблону, який поводиться не так, як очікувалося
під час аналізу його змінних:

.. code-block:: twig

    {{ dump(user) }}

.. note::

    За замовчуванням функція ``dump`` недоступна. Ви повинні додати розширення
    ``\Twig\Extension\DebugExtension`` явно при створенні вашого середовища  
    Twig ::

        $twig = new \Twig\Environment($loader, [
            'debug' => true,
            // ...
        ]);
        $twig->addExtension(new \Twig\Extension\DebugExtension());

    Навіть коли увімкнена, функція ``dump`` нічого не виводитиме, якщо не увімкнено опцію
    ``debug`` у середовищі (щоб уникнути витоку інформації про налагодження на виробничому сервері).

У контексті HTML, обгорніть виведення тегом ``pre``, щоб полегшити його читання:

.. code-block:: html+twig

    <pre>
        {{ dump(user) }}
    </pre>

.. tip::

    Використання тегу ``pre`` не потрібне, якщо увімкнено `XDebug`_ і``html_errors``;
    як бонус, виведення також буде кращим, якщо увімкнено XDebug.

Ви можете налагодити декілька змінних, передавши їх як додаткові аргументи:

.. code-block:: twig

    {{ dump(user, categories) }}

Якщо ви не передаєте жодного значення, всі змінні з поточного контексту
скидаються:

.. code-block:: twig

    {{ dump() }}

.. note::

    Внутрішньо Twig використовує PHP-функцію `var_dump`_.

Аргументи
---------

* ``context``: Контекст для скидання

.. _`XDebug`:   https://xdebug.org/docs/display
.. _`var_dump`: https://www.php.net/var_dump
