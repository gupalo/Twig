``use``
=======

.. note::

    Горизонтальне повторне використання - це просунута функція Twig, яка майже ніколи не потрібна у
    у звичайних шаблонах. В основному вона використовується у проектах, де потрібно зробити блоки шаблонів            багаторазовими без використання успадкування.

Успадкування шаблонів - одна з найпотужніших можливостей Twig, але вона
обмежена одним успадкуванням; шаблон може розширювати лише один інший шаблон.
Це обмеження робить успадкування шаблонів простим для розуміння і легким для
налагодження:

.. code-block:: twig

    {% extends "base.html" %}

    {% block title %}{% endblock %}
    {% block content %}{% endblock %}

Горизонтальне повторне використання - це спосіб досягти тієї ж мети, що і множинне успадкування,
але без пов'язаних з цим складнощів:

.. code-block:: twig

    {% extends "base.html" %}

    {% use "blocks.html" %}

    {% block title %}{% endblock %}
    {% block content %}{% endblock %}

Твердження ``use`` вказує Twig імпортувати блоки, визначені у файлі
``blocks.html`` до поточного шаблону (це як макроси, але для блоків):

.. code-block:: twig

    {# blocks.html #}
    
    {% block sidebar %}{% endblock %}

У цьому прикладі твердження ``use`` імпортує блок ``sidebar`` до 
основного шаблону. Код в основному еквівалентний наступному (імпортовані блоки
не виводяться автоматично):

.. code-block:: twig

    {% extends "base.html" %}

    {% block sidebar %}{% endblock %}
    {% block title %}{% endblock %}
    {% block content %}{% endblock %}

.. note::

    Тег ``use`` імпортує шаблон лише у тому випадку, якщо він не розширює інший 
    шаблон, якщо він не визначає макроси і якщо тіло шаблону порожнє. Але він
    може *використовувати* інші шаблони.

.. note::

    Оскільки твердження ``use`` вирішується незалежно від контексту, 
    переданого до шаблону, посилання на шаблон не може бути виразом.

Основний шаблон також може перевизначати будь-який імпортований блок. Якщо шаблон
вже визначає блок ``sidebar``, то блок, визначений у файлі ``blocks.html``
ігнорується. Щоб уникнути конфліктів імен, ви можете перейменовувати імпортовані блоки:

.. code-block:: twig

    {% extends "base.html" %}

    {% use "blocks.html" with sidebar as base_sidebar, title as base_title %}

    {% block sidebar %}{% endblock %}
    {% block title %}{% endblock %}
    {% block content %}{% endblock %}

Функція ``parent()`` автоматично визначає коректне дерево успадкування, тому її можна
використовувати при перевизначенні блоку, визначеного в імпортованому шаблоні:

.. code-block:: twig

    {% extends "base.html" %}

    {% use "blocks.html" %}

    {% block sidebar %}
        {{ parent() }}
    {% endblock %}

    {% block title %}{% endblock %}
    {% block content %}{% endblock %}

У цьому прикладі ``parent()`` коректно викличе блок ``sidebar`` з
шаблону ``blocks.html``.

.. tip::

    Перейменування дозволяє імітувати успадкування шляхом виклику "батьківського" блоку:

    .. code-block:: twig

        {% extends "base.html" %}

        {% use "blocks.html" with sidebar as parent_sidebar %}

        {% block sidebar %}
            {{ block('parent_sidebar') }}
        {% endblock %}

.. note::

    Ви можете використовувати скільки завгодно тверджень ``use`` у будь-якому наданому шаблоні.
    Якщо два імпортовані шаблони визначають один і той самий блок, виграє останній.
